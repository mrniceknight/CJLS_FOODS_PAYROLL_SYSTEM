#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CJLS_FOODS_PAYROLL_SYSTEM.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CJLSFOODSPAYROLL")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Deduction(tbl_Deduction instance);
    partial void Updatetbl_Deduction(tbl_Deduction instance);
    partial void Deletetbl_Deduction(tbl_Deduction instance);
    partial void Inserttbl_User(tbl_User instance);
    partial void Updatetbl_User(tbl_User instance);
    partial void Deletetbl_User(tbl_User instance);
    partial void Inserttbl_DeductionsLog(tbl_DeductionsLog instance);
    partial void Updatetbl_DeductionsLog(tbl_DeductionsLog instance);
    partial void Deletetbl_DeductionsLog(tbl_DeductionsLog instance);
    partial void Inserttbl_Employee(tbl_Employee instance);
    partial void Updatetbl_Employee(tbl_Employee instance);
    partial void Deletetbl_Employee(tbl_Employee instance);
    partial void Inserttbl_EmployeeType(tbl_EmployeeType instance);
    partial void Updatetbl_EmployeeType(tbl_EmployeeType instance);
    partial void Deletetbl_EmployeeType(tbl_EmployeeType instance);
    partial void Inserttbl_Payroll(tbl_Payroll instance);
    partial void Updatetbl_Payroll(tbl_Payroll instance);
    partial void Deletetbl_Payroll(tbl_Payroll instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::CJLS_FOODS_PAYROLL_SYSTEM.Properties.Settings.Default.CJLSFOODSPAYROLLConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Deduction> tbl_Deductions
		{
			get
			{
				return this.GetTable<tbl_Deduction>();
			}
		}
		
		public System.Data.Linq.Table<tbl_User> tbl_Users
		{
			get
			{
				return this.GetTable<tbl_User>();
			}
		}
		
		public System.Data.Linq.Table<tbl_DeductionsLog> tbl_DeductionsLogs
		{
			get
			{
				return this.GetTable<tbl_DeductionsLog>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Employee> tbl_Employees
		{
			get
			{
				return this.GetTable<tbl_Employee>();
			}
		}
		
		public System.Data.Linq.Table<tbl_EmployeeType> tbl_EmployeeTypes
		{
			get
			{
				return this.GetTable<tbl_EmployeeType>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Payroll> tbl_Payrolls
		{
			get
			{
				return this.GetTable<tbl_Payroll>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_checkLogin")]
		public ISingleResult<sp_checkLoginResult> sp_checkLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password);
			return ((ISingleResult<sp_checkLoginResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Deductions")]
	public partial class tbl_Deduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeductionID;
		
		private string _DeductionName;
		
		private System.Nullable<double> _DeductionFlatRate;
		
		private System.Nullable<double> _DeductionPercentRate;
		
		private EntitySet<tbl_DeductionsLog> _tbl_DeductionsLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeductionIDChanging(int value);
    partial void OnDeductionIDChanged();
    partial void OnDeductionNameChanging(string value);
    partial void OnDeductionNameChanged();
    partial void OnDeductionFlatRateChanging(System.Nullable<double> value);
    partial void OnDeductionFlatRateChanged();
    partial void OnDeductionPercentRateChanging(System.Nullable<double> value);
    partial void OnDeductionPercentRateChanged();
    #endregion
		
		public tbl_Deduction()
		{
			this._tbl_DeductionsLogs = new EntitySet<tbl_DeductionsLog>(new Action<tbl_DeductionsLog>(this.attach_tbl_DeductionsLogs), new Action<tbl_DeductionsLog>(this.detach_tbl_DeductionsLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DeductionID
		{
			get
			{
				return this._DeductionID;
			}
			set
			{
				if ((this._DeductionID != value))
				{
					this.OnDeductionIDChanging(value);
					this.SendPropertyChanging();
					this._DeductionID = value;
					this.SendPropertyChanged("DeductionID");
					this.OnDeductionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionName", DbType="VarChar(50)")]
		public string DeductionName
		{
			get
			{
				return this._DeductionName;
			}
			set
			{
				if ((this._DeductionName != value))
				{
					this.OnDeductionNameChanging(value);
					this.SendPropertyChanging();
					this._DeductionName = value;
					this.SendPropertyChanged("DeductionName");
					this.OnDeductionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionFlatRate", DbType="Float")]
		public System.Nullable<double> DeductionFlatRate
		{
			get
			{
				return this._DeductionFlatRate;
			}
			set
			{
				if ((this._DeductionFlatRate != value))
				{
					this.OnDeductionFlatRateChanging(value);
					this.SendPropertyChanging();
					this._DeductionFlatRate = value;
					this.SendPropertyChanged("DeductionFlatRate");
					this.OnDeductionFlatRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionPercentRate", DbType="Float")]
		public System.Nullable<double> DeductionPercentRate
		{
			get
			{
				return this._DeductionPercentRate;
			}
			set
			{
				if ((this._DeductionPercentRate != value))
				{
					this.OnDeductionPercentRateChanging(value);
					this.SendPropertyChanging();
					this._DeductionPercentRate = value;
					this.SendPropertyChanged("DeductionPercentRate");
					this.OnDeductionPercentRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Deduction_tbl_DeductionsLog", Storage="_tbl_DeductionsLogs", ThisKey="DeductionID", OtherKey="DeductionID")]
		public EntitySet<tbl_DeductionsLog> tbl_DeductionsLogs
		{
			get
			{
				return this._tbl_DeductionsLogs;
			}
			set
			{
				this._tbl_DeductionsLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DeductionsLogs(tbl_DeductionsLog entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Deduction = this;
		}
		
		private void detach_tbl_DeductionsLogs(tbl_DeductionsLog entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Deduction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Users")]
	public partial class tbl_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<int> _EmployeeID;
		
		private string _SecretQuestion;
		
		private string _SecretAnswer;
		
		private EntityRef<tbl_Employee> _tbl_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnSecretQuestionChanging(string value);
    partial void OnSecretQuestionChanged();
    partial void OnSecretAnswerChanging(string value);
    partial void OnSecretAnswerChanged();
    #endregion
		
		public tbl_User()
		{
			this._tbl_Employee = default(EntityRef<tbl_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(100)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._tbl_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretQuestion", DbType="VarChar(50)")]
		public string SecretQuestion
		{
			get
			{
				return this._SecretQuestion;
			}
			set
			{
				if ((this._SecretQuestion != value))
				{
					this.OnSecretQuestionChanging(value);
					this.SendPropertyChanging();
					this._SecretQuestion = value;
					this.SendPropertyChanged("SecretQuestion");
					this.OnSecretQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretAnswer", DbType="VarChar(50)")]
		public string SecretAnswer
		{
			get
			{
				return this._SecretAnswer;
			}
			set
			{
				if ((this._SecretAnswer != value))
				{
					this.OnSecretAnswerChanging(value);
					this.SendPropertyChanging();
					this._SecretAnswer = value;
					this.SendPropertyChanged("SecretAnswer");
					this.OnSecretAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Employee_tbl_User", Storage="_tbl_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public tbl_Employee tbl_Employee
		{
			get
			{
				return this._tbl_Employee.Entity;
			}
			set
			{
				tbl_Employee previousValue = this._tbl_Employee.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Employee.Entity = null;
						previousValue.tbl_Users.Remove(this);
					}
					this._tbl_Employee.Entity = value;
					if ((value != null))
					{
						value.tbl_Users.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_DeductionsLog")]
	public partial class tbl_DeductionsLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeductionsLogID;
		
		private System.Nullable<int> _EmployeeID;
		
		private System.Nullable<int> _DeductionID;
		
		private System.Nullable<System.DateTime> _DateApplied;
		
		private EntityRef<tbl_Deduction> _tbl_Deduction;
		
		private EntityRef<tbl_Employee> _tbl_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeductionsLogIDChanging(int value);
    partial void OnDeductionsLogIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnDeductionIDChanging(System.Nullable<int> value);
    partial void OnDeductionIDChanged();
    partial void OnDateAppliedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAppliedChanged();
    #endregion
		
		public tbl_DeductionsLog()
		{
			this._tbl_Deduction = default(EntityRef<tbl_Deduction>);
			this._tbl_Employee = default(EntityRef<tbl_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionsLogID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeductionsLogID
		{
			get
			{
				return this._DeductionsLogID;
			}
			set
			{
				if ((this._DeductionsLogID != value))
				{
					this.OnDeductionsLogIDChanging(value);
					this.SendPropertyChanging();
					this._DeductionsLogID = value;
					this.SendPropertyChanged("DeductionsLogID");
					this.OnDeductionsLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._tbl_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionID", DbType="Int")]
		public System.Nullable<int> DeductionID
		{
			get
			{
				return this._DeductionID;
			}
			set
			{
				if ((this._DeductionID != value))
				{
					if (this._tbl_Deduction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeductionIDChanging(value);
					this.SendPropertyChanging();
					this._DeductionID = value;
					this.SendPropertyChanged("DeductionID");
					this.OnDeductionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateApplied", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateApplied
		{
			get
			{
				return this._DateApplied;
			}
			set
			{
				if ((this._DateApplied != value))
				{
					this.OnDateAppliedChanging(value);
					this.SendPropertyChanging();
					this._DateApplied = value;
					this.SendPropertyChanged("DateApplied");
					this.OnDateAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Deduction_tbl_DeductionsLog", Storage="_tbl_Deduction", ThisKey="DeductionID", OtherKey="DeductionID", IsForeignKey=true)]
		public tbl_Deduction tbl_Deduction
		{
			get
			{
				return this._tbl_Deduction.Entity;
			}
			set
			{
				tbl_Deduction previousValue = this._tbl_Deduction.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Deduction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Deduction.Entity = null;
						previousValue.tbl_DeductionsLogs.Remove(this);
					}
					this._tbl_Deduction.Entity = value;
					if ((value != null))
					{
						value.tbl_DeductionsLogs.Add(this);
						this._DeductionID = value.DeductionID;
					}
					else
					{
						this._DeductionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Deduction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Employee_tbl_DeductionsLog", Storage="_tbl_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public tbl_Employee tbl_Employee
		{
			get
			{
				return this._tbl_Employee.Entity;
			}
			set
			{
				tbl_Employee previousValue = this._tbl_Employee.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Employee.Entity = null;
						previousValue.tbl_DeductionsLogs.Remove(this);
					}
					this._tbl_Employee.Entity = value;
					if ((value != null))
					{
						value.tbl_DeductionsLogs.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Employees")]
	public partial class tbl_Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<int> _ContactNumber;
		
		private string _Address;
		
		private string _Gender;
		
		private System.Nullable<int> _AvailableLeaves;
		
		private System.Nullable<int> _EmployeeTypeID;
		
		private EntitySet<tbl_User> _tbl_Users;
		
		private EntitySet<tbl_DeductionsLog> _tbl_DeductionsLogs;
		
		private EntitySet<tbl_Payroll> _tbl_Payrolls;
		
		private EntityRef<tbl_EmployeeType> _tbl_EmployeeType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnContactNumberChanging(System.Nullable<int> value);
    partial void OnContactNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAvailableLeavesChanging(System.Nullable<int> value);
    partial void OnAvailableLeavesChanged();
    partial void OnEmployeeTypeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeTypeIDChanged();
    #endregion
		
		public tbl_Employee()
		{
			this._tbl_Users = new EntitySet<tbl_User>(new Action<tbl_User>(this.attach_tbl_Users), new Action<tbl_User>(this.detach_tbl_Users));
			this._tbl_DeductionsLogs = new EntitySet<tbl_DeductionsLog>(new Action<tbl_DeductionsLog>(this.attach_tbl_DeductionsLogs), new Action<tbl_DeductionsLog>(this.detach_tbl_DeductionsLogs));
			this._tbl_Payrolls = new EntitySet<tbl_Payroll>(new Action<tbl_Payroll>(this.attach_tbl_Payrolls), new Action<tbl_Payroll>(this.detach_tbl_Payrolls));
			this._tbl_EmployeeType = default(EntityRef<tbl_EmployeeType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="Int")]
		public System.Nullable<int> ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(25)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableLeaves", DbType="Int")]
		public System.Nullable<int> AvailableLeaves
		{
			get
			{
				return this._AvailableLeaves;
			}
			set
			{
				if ((this._AvailableLeaves != value))
				{
					this.OnAvailableLeavesChanging(value);
					this.SendPropertyChanging();
					this._AvailableLeaves = value;
					this.SendPropertyChanged("AvailableLeaves");
					this.OnAvailableLeavesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeID", DbType="Int")]
		public System.Nullable<int> EmployeeTypeID
		{
			get
			{
				return this._EmployeeTypeID;
			}
			set
			{
				if ((this._EmployeeTypeID != value))
				{
					if (this._tbl_EmployeeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypeID = value;
					this.SendPropertyChanged("EmployeeTypeID");
					this.OnEmployeeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Employee_tbl_User", Storage="_tbl_Users", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<tbl_User> tbl_Users
		{
			get
			{
				return this._tbl_Users;
			}
			set
			{
				this._tbl_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Employee_tbl_DeductionsLog", Storage="_tbl_DeductionsLogs", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<tbl_DeductionsLog> tbl_DeductionsLogs
		{
			get
			{
				return this._tbl_DeductionsLogs;
			}
			set
			{
				this._tbl_DeductionsLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Employee_tbl_Payroll", Storage="_tbl_Payrolls", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<tbl_Payroll> tbl_Payrolls
		{
			get
			{
				return this._tbl_Payrolls;
			}
			set
			{
				this._tbl_Payrolls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_EmployeeType_tbl_Employee", Storage="_tbl_EmployeeType", ThisKey="EmployeeTypeID", OtherKey="EmployeeTypesID", IsForeignKey=true)]
		public tbl_EmployeeType tbl_EmployeeType
		{
			get
			{
				return this._tbl_EmployeeType.Entity;
			}
			set
			{
				tbl_EmployeeType previousValue = this._tbl_EmployeeType.Entity;
				if (((previousValue != value) 
							|| (this._tbl_EmployeeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_EmployeeType.Entity = null;
						previousValue.tbl_Employees.Remove(this);
					}
					this._tbl_EmployeeType.Entity = value;
					if ((value != null))
					{
						value.tbl_Employees.Add(this);
						this._EmployeeTypeID = value.EmployeeTypesID;
					}
					else
					{
						this._EmployeeTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_EmployeeType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Users(tbl_User entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Employee = this;
		}
		
		private void detach_tbl_Users(tbl_User entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Employee = null;
		}
		
		private void attach_tbl_DeductionsLogs(tbl_DeductionsLog entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Employee = this;
		}
		
		private void detach_tbl_DeductionsLogs(tbl_DeductionsLog entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Employee = null;
		}
		
		private void attach_tbl_Payrolls(tbl_Payroll entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Employee = this;
		}
		
		private void detach_tbl_Payrolls(tbl_Payroll entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_EmployeeTypes")]
	public partial class tbl_EmployeeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeTypesID;
		
		private string _EmployeeNameTitle;
		
		private System.Nullable<double> _SalaryRate;
		
		private EntitySet<tbl_Employee> _tbl_Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeTypesIDChanging(int value);
    partial void OnEmployeeTypesIDChanged();
    partial void OnEmployeeNameTitleChanging(string value);
    partial void OnEmployeeNameTitleChanged();
    partial void OnSalaryRateChanging(System.Nullable<double> value);
    partial void OnSalaryRateChanged();
    #endregion
		
		public tbl_EmployeeType()
		{
			this._tbl_Employees = new EntitySet<tbl_Employee>(new Action<tbl_Employee>(this.attach_tbl_Employees), new Action<tbl_Employee>(this.detach_tbl_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeTypesID
		{
			get
			{
				return this._EmployeeTypesID;
			}
			set
			{
				if ((this._EmployeeTypesID != value))
				{
					this.OnEmployeeTypesIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypesID = value;
					this.SendPropertyChanged("EmployeeTypesID");
					this.OnEmployeeTypesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNameTitle", DbType="VarChar(50)")]
		public string EmployeeNameTitle
		{
			get
			{
				return this._EmployeeNameTitle;
			}
			set
			{
				if ((this._EmployeeNameTitle != value))
				{
					this.OnEmployeeNameTitleChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNameTitle = value;
					this.SendPropertyChanged("EmployeeNameTitle");
					this.OnEmployeeNameTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryRate", DbType="Float")]
		public System.Nullable<double> SalaryRate
		{
			get
			{
				return this._SalaryRate;
			}
			set
			{
				if ((this._SalaryRate != value))
				{
					this.OnSalaryRateChanging(value);
					this.SendPropertyChanging();
					this._SalaryRate = value;
					this.SendPropertyChanged("SalaryRate");
					this.OnSalaryRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_EmployeeType_tbl_Employee", Storage="_tbl_Employees", ThisKey="EmployeeTypesID", OtherKey="EmployeeTypeID")]
		public EntitySet<tbl_Employee> tbl_Employees
		{
			get
			{
				return this._tbl_Employees;
			}
			set
			{
				this._tbl_Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Employees(tbl_Employee entity)
		{
			this.SendPropertyChanging();
			entity.tbl_EmployeeType = this;
		}
		
		private void detach_tbl_Employees(tbl_Employee entity)
		{
			this.SendPropertyChanging();
			entity.tbl_EmployeeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Payroll")]
	public partial class tbl_Payroll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PayrollID;
		
		private System.Nullable<int> _EmployeeID;
		
		private System.Nullable<double> _TotalDeductions;
		
		private System.Nullable<double> _NumberOfHoursWorked;
		
		private System.Nullable<double> _OvertimeWorked;
		
		private System.Nullable<double> _OvertimePay;
		
		private System.Nullable<double> _Netpay;
		
		private EntityRef<tbl_Employee> _tbl_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayrollIDChanging(int value);
    partial void OnPayrollIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnTotalDeductionsChanging(System.Nullable<double> value);
    partial void OnTotalDeductionsChanged();
    partial void OnNumberOfHoursWorkedChanging(System.Nullable<double> value);
    partial void OnNumberOfHoursWorkedChanged();
    partial void OnOvertimeWorkedChanging(System.Nullable<double> value);
    partial void OnOvertimeWorkedChanged();
    partial void OnOvertimePayChanging(System.Nullable<double> value);
    partial void OnOvertimePayChanged();
    partial void OnNetpayChanging(System.Nullable<double> value);
    partial void OnNetpayChanged();
    #endregion
		
		public tbl_Payroll()
		{
			this._tbl_Employee = default(EntityRef<tbl_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PayrollID
		{
			get
			{
				return this._PayrollID;
			}
			set
			{
				if ((this._PayrollID != value))
				{
					this.OnPayrollIDChanging(value);
					this.SendPropertyChanging();
					this._PayrollID = value;
					this.SendPropertyChanged("PayrollID");
					this.OnPayrollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._tbl_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDeductions", DbType="Float")]
		public System.Nullable<double> TotalDeductions
		{
			get
			{
				return this._TotalDeductions;
			}
			set
			{
				if ((this._TotalDeductions != value))
				{
					this.OnTotalDeductionsChanging(value);
					this.SendPropertyChanging();
					this._TotalDeductions = value;
					this.SendPropertyChanged("TotalDeductions");
					this.OnTotalDeductionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfHoursWorked", DbType="Float")]
		public System.Nullable<double> NumberOfHoursWorked
		{
			get
			{
				return this._NumberOfHoursWorked;
			}
			set
			{
				if ((this._NumberOfHoursWorked != value))
				{
					this.OnNumberOfHoursWorkedChanging(value);
					this.SendPropertyChanging();
					this._NumberOfHoursWorked = value;
					this.SendPropertyChanged("NumberOfHoursWorked");
					this.OnNumberOfHoursWorkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeWorked", DbType="Float")]
		public System.Nullable<double> OvertimeWorked
		{
			get
			{
				return this._OvertimeWorked;
			}
			set
			{
				if ((this._OvertimeWorked != value))
				{
					this.OnOvertimeWorkedChanging(value);
					this.SendPropertyChanging();
					this._OvertimeWorked = value;
					this.SendPropertyChanged("OvertimeWorked");
					this.OnOvertimeWorkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimePay", DbType="Float")]
		public System.Nullable<double> OvertimePay
		{
			get
			{
				return this._OvertimePay;
			}
			set
			{
				if ((this._OvertimePay != value))
				{
					this.OnOvertimePayChanging(value);
					this.SendPropertyChanging();
					this._OvertimePay = value;
					this.SendPropertyChanged("OvertimePay");
					this.OnOvertimePayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Netpay", DbType="Float")]
		public System.Nullable<double> Netpay
		{
			get
			{
				return this._Netpay;
			}
			set
			{
				if ((this._Netpay != value))
				{
					this.OnNetpayChanging(value);
					this.SendPropertyChanging();
					this._Netpay = value;
					this.SendPropertyChanged("Netpay");
					this.OnNetpayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Employee_tbl_Payroll", Storage="_tbl_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public tbl_Employee tbl_Employee
		{
			get
			{
				return this._tbl_Employee.Entity;
			}
			set
			{
				tbl_Employee previousValue = this._tbl_Employee.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Employee.Entity = null;
						previousValue.tbl_Payrolls.Remove(this);
					}
					this._tbl_Employee.Entity = value;
					if ((value != null))
					{
						value.tbl_Payrolls.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_checkLoginResult
	{
		
		private int _UserID;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<int> _EmployeeID;
		
		private string _SecretQuestion;
		
		private string _SecretAnswer;
		
		public sp_checkLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(100)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretQuestion", DbType="VarChar(50)")]
		public string SecretQuestion
		{
			get
			{
				return this._SecretQuestion;
			}
			set
			{
				if ((this._SecretQuestion != value))
				{
					this._SecretQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretAnswer", DbType="VarChar(50)")]
		public string SecretAnswer
		{
			get
			{
				return this._SecretAnswer;
			}
			set
			{
				if ((this._SecretAnswer != value))
				{
					this._SecretAnswer = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
